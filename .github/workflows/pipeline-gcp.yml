name: Application CI/CD - Google Cloud

on:
  workflow_dispatch:
#  push:
#    branches:
#      - '*'
#      - '!master'
#      - '!main'
#  pull_request:
#    types: [closed]

jobs:
  deploy:
    name: "[DEV] - Deploy"
    runs-on: ubuntu-latest
#    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    env:
      SERVICE_NAME: "container-with-jib"
      CONTAINER_IMAGE: "gru.ocir.io/grngg3tmknzq/container-with-jib"

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git Config
        run: |
          git config --global user.email "$(git --no-pager show -s --format='%ae')"
          git config --global user.name "$(git --no-pager show -s --format='%an')"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI and configure Docker credentials
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Generate random tag
        id: random_tag
        run: echo "TAG=$(echo ${GITHUB_SHA::4})" >> $GITHUB_OUTPUT

      - name: Build container with Google plugin jib
        run: mvn compile jib:build -Pgcp
        env:
          GCP_CONTAINER: ${{ secrets.GCP_CONTAINER }}
          TAG: ${{ steps.random_tag.outputs.TAG }}

#      - name: Argocd - Update Deployment Configuration
#        run: |
#          git clone https://${{ secrets.PASSWORD_GIT_CI }}@github.com/washington1995luiz/argocd.git
#          cd argocd/apps/services/${{ env.SERVICE_NAME }}/
#          cp deployment.yaml deployment.yaml.old
#          sed -i "s|image:.*$|image: ${{ env.CONTAINER_IMAGE }}:${{ steps.random_tag.outputs.TAG }}|" deployment.yaml
#          git add deployment.yaml.old
#          git add deployment.yaml
#          git commit -m "[${{ env.SERVICE_NAME }}] - Update Docker image tag: ${{ steps.random_tag.outputs.TAG }}"
#          git push origin master
#          echo "Check Deploy in ArgoCD Application"